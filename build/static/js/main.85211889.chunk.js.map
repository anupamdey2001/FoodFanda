{"version":3,"sources":["RecipeItems/RecipeItems.js","App.js","index.js"],"names":["RecipeItems","recipe","match","className","onClick","window","open","src","alt","uuidv4","App","useState","query","setquery","recipes","setrecipes","healthLable","setHealthLable","dietLabels","setDietLabels","url","getRecipeInfo","a","Axios","get","result","data","hits","onSubmit","event","preventDefault","type","placeholder","autoComplete","value","onChange","target","map","Math","random","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.85211889.chunk.js","sourcesContent":["import \"./RecipeItems.css\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport default function RecipeItems({ recipe }) {\n  return (\n    recipe[\"recipe\"][\"image\"].match(/\\.(jpeg|jpg|gif|png)$/) != null && (\n      <div\n        className=\"RecipeItems\"\n        onClick={() => window.open(recipe[\"recipe\"][\"url\"])}\n      >\n        <img className=\"RecipeItems__img\" src={recipe[\"recipe\"][\"image\"]} alt=\"img\" />\n        <p className=\"RecipeItems__name\" key={uuidv4()}>\n          {recipe[\"recipe\"][\"label\"]}\n        </p>\n      </div>\n    )\n  );\n}","import Axios from \"axios\";\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport RecipeItems from \"./RecipeItems/RecipeItems\";\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst App = () => {\n  const [query, setquery] = useState(\"\");\n  const [recipes, setrecipes] = useState([]);\n  const [healthLable, setHealthLable] = useState(\"vegan\");\n  const [dietLabels, setDietLabels] = useState(\"High-Fiber\");\n\n  const YOUR_APP_ID = 'e7fa7934';\n  const YOUR_APP_KEY = \"02b4160254438cdbe959666e36e4358c\";\n\n  const url = `https://api.edamam.com/search?\n  q=${query}&app_id=${YOUR_APP_ID}&\n  app_key=${YOUR_APP_KEY}`;\n\n  const getRecipeInfo = async () => {\n    var result = await Axios.get(url);\n    setrecipes(result.data.hits);\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    getRecipeInfo();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Food Funda üçî</h1>\n      <p className=\"lead\">Search the Recipe that you what</p>\n      <form className=\"app__searchForm\" onSubmit={onSubmit}>\n        <input\n          className=\"app__input\"\n          type=\"text\"\n          placeholder=\"Enter Ingridient\"\n          autoComplete=\"Off\"\n          value={query}\n          onChange={(event) => setquery(event.target.value)}\n        />\n        <select className=\"app_dietLabels\">\n          <option onClick={() => setDietLabels(\"High-Fiber\")} >{dietLabels}</option>\n          <option onClick={() => setDietLabels(\"Low-Fat\")} >Low-Fat</option>\n          <option onClick={() => setDietLabels(\"Low-Sodium\")} >Low-Sodium</option>\n        </select>\n        <select className=\"app_healthLables\">\n          <option onClick={() => setHealthLable(\"vegan\")} >{healthLable}</option>\n          <option onClick={() => setHealthLable(\"Vegetarian\")} >Vegetarian</option>\n          <option onClick={() => setHealthLable(\"Pescatarian\")} >Pescatarian</option>\n          <option onClick={() => setHealthLable(\"Paleo\")} >Paleo</option>\n          <option onClick={() => setHealthLable(\"Mediterranean\")} >Mediterranean</option>\n          <option onClick={() => setHealthLable(\"DASH\")} >DASH</option>\n          <option onClick={() => setHealthLable(\"Dairy-Free\")} >Dairy-Free</option>\n          <option onClick={() => setHealthLable(\"Gluten-Free\")} >Gluten-Free</option>\n          <option onClick={() => setHealthLable(\"Wheat-Free\")} >Wheat-Free</option>\n          <option onClick={() => setHealthLable(\"Egg-Free\")} >Egg-Free</option>\n          <option onClick={() => setHealthLable(\"Peanut-Free\")} >Peanut-Free</option>\n          <option onClick={() => setHealthLable(\"Tree-Nut-Free\")} >Tree-Nut-Free</option>\n          <option onClick={() => setHealthLable(\"Soy-Free\")} >Soy-Free</option>\n          <option onClick={() => setHealthLable(\"Fish-Free\")} >Fish-Free</option>\n          <option onClick={() => setHealthLable(\"Shellfish-Free\")} >Shellfish-Free</option>\n          <option onClick={() => setHealthLable(\"Pork-Free\")} >Pork-Free</option>\n          <option onClick={() => setHealthLable(\"Red-Meat-Free\")} >Red-Meat-Free</option>\n          <option onClick={() => setHealthLable(\"Crustacean-Free\")} >Crustacean-Free</option>\n          <option onClick={() => setHealthLable(\"Celery-Free\")} >Celery-Free</option>\n          <option onClick={() => setHealthLable(\"Mustard-Free\")} >Mustard-Free</option>\n          <option onClick={() => setHealthLable(\"Sesame-Free\")} >Sesame-Free</option>\n          <option onClick={() => setHealthLable(\"Lupine-Free\")} >Lupine-Free</option>\n          <option onClick={() => setHealthLable(\"Mollusk-Free\")} >Mollusk-Free</option>\n          <option onClick={() => setHealthLable(\"Alcohol-Free\")} >Alcohol-Free</option>\n          <option onClick={() => setHealthLable(\"No oil added\")} >No oil added</option>\n          <option onClick={() => setHealthLable(\"Sulfite-Free\")} >Sulfite-Free</option>\n          <option onClick={() => setHealthLable(\"Kosher\")} >Kosher</option>\n          <option onClick={() => setHealthLable(\"Immuno-Supportive\")} >Immuno-Supportive</option>\n        </select>\n        <button className=\"app__submit\" type=\"submit\" ><SearchIcon /></button>\n      </form>\n\n      <div className=\"app__recipes\">\n        {recipes !== [] &&\n          recipes.map((recipe) => {\n            return <RecipeItems recipe={recipe} key={Math.random()} />;\n          })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <App />,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}